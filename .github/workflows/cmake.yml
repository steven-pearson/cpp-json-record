name: CMake CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install jsoncpp manually
      run: sudo apt-get install libjsoncpp-dev libcurl4-openssl-dev   
    - name: Install dependencies (lcov, gtest)
      run: sudo apt-get install lcov libgtest-dev && cd /usr/src/gtest && sudo cmake CMakeLists.txt && sudo make && sudo cp lib/*.a /usr/lib && sudo ln -s /usr/lib/libgtest.a /usr/local/lib/libgtest.a && sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/libgtest_main.a  
      
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Generate coverage report
      working-directory: ${{github.workspace}}/build/src/CMakeFiles/record.dir
      run: |
        rm -rf ../../../../coverage
        gcov record.cpp.gcno
        mkdir ../../../../coverage
        lcov --capture --directory . --output-file lcov.info
        genhtml lcov.info -o ../../../../coverage --frame --legend --demangle-cpp

    - uses: actions/upload-artifact@v2
      with:
        name: Coverage results
        path: coverage  
